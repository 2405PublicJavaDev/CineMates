<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.filmfellows.cinemates.domain.reservation.model.mapper.ReservationMapper">
    <insert id="insertReservationInfo">
        INSERT INTO RESERVATION_TBL
        VALUES (#{reservationNo}, #{reservationVisitor}, #{reservationSeat}, #{reservationDate}, #{movieNo},
                #{memberId}, #{screenNo}, #{showtimeNo}, #{cinemaNo}, #{title}, #{screenName}, #{cinemaName},
                #{showtimeTime}, #{imp_uid}, #{adultReserved}, #{childReserved}, #{seniorReserved})
    </insert>

    <!-- 상영관 출력  -->
    <select id="selectCinemas" resultType="String">
        SELECT CINEMA_NAME
        FROM CINEMA_TBL
        WHERE CINEMA_ADDRESS LIKE '%' || #{cinemaAddress} || '%'
    </select>
    <!--영화 제목 출력 -->
    <select id="selectMovies" resultType="String">
        SELECT DISTINCT M.TITLE
        FROM CINEMA_TBL
                 JOIN SCREEN_TBL USING (CINEMA_NO)
                 JOIN SHOWTIME_TBL USING (SCREEN_NO)
                 JOIN MOVIE_TBL M USING (MOVIE_NO)
        WHERE CINEMA_NAME = #{cinemaName}
          AND IS_BOOKABLE = 'Y'
    </select>
    <!--영화 이름과 번호 출력-->
    <select id="selectCinemaName" resultType="String">
        SELECT CINEMA_NAME, CINEMA_NO
        FROM CINEMA_TBL
                 JOIN SCREEN_TBL USING (CINEMA_NO)
                 JOIN SHOWTIME_TBL USING (SCREEN_NO)
    </select>
    <!-- 상영정보 출력 -->
    <select id="selectShowInfo" resultType="showInfoDTO">
        SELECT s.showtime_time,
               sc.screen_seat,
               sc.screen_Name,
               screen_No,
               movie_No,
               m.title,
               cinema_no,
               CINEMA_NAME,
               s.showtime_no
        FROM CINEMA_TBL
                 JOIN SCREEN_TBL sc USING (CINEMA_NO)
                 JOIN SHOWTIME_TBL s USING (SCREEN_NO)
                 JOIN MOVIE_TBL m USING (MOVIE_NO)
        where cinema_name = #{cinemaName}
          AND title = #{title}
    </select>
    <!--예약 좌석 출력-->
    <select id="selectReservationSeat" resultType="ReservationDTO">
        SELECT r.RESERVATION_SEAT, s.SCREEN_NAME, st.SHOWTIME_TIME
        FROM RESERVATION_TBL r
                 JOIN SHOWTIME_TBL st ON r.SHOWTIME_NO = st.SHOWTIME_NO
                 JOIN SCREEN_TBL s ON st.SCREEN_NO = s.SCREEN_NO
        where RESERVATION_DATE = #{reservationDate}
    </select>
    <!--사용자 정보 출력-->
    <select id="selectMemberInfo" resultType="MemberDTO">
        select *
        from member_tbl
        where MEMBER_ID = #{memberId}
    </select>
    <!--영화 포스터 출력-->
    <select id="selectMoviePoster" resultType="ShowInfoDTO">
        SELECT POSTER_URL
        FROM MOVIE_TBL
        WHERE TITLE = #{title}

    </select>
    <select id="selectReservationInfo" resultType="myReservationResponse">
        SELECT
            R.TITLE AS TITLE,
            R.RESERVATION_NO AS RESERVATIONNO,
            TO_CHAR(TO_DATE(P.PAYMENT_DATE, 'YY/MM/DD'), 'YYYY-MM-DD') AS PAYMENTDATE,
            TO_CHAR(TO_DATE(R.RESERVATION_DATE || ' ' || R.SHOWTIME_TIME, 'YY/MM/DD HH24:MI'), 'YYYY-MM-DD HH24:MI') AS RESERVATIONDATETIME,
            RTRIM(
                LISTAGG(CASE
                    WHEN R.ADULTRESERVED IS NOT NULL AND R.ADULTRESERVED > 0 THEN '성인' || R.ADULTRESERVED || '명/'
                    ELSE NULL
                    END, '') WITHIN GROUP (ORDER BY R.ADULTRESERVED) ||
                LISTAGG(CASE
                    WHEN R.CHILDRESERVED IS NOT NULL AND R.CHILDRESERVED > 0 THEN '어린이' || R.CHILDRESERVED || '명/'
                    ELSE NULL
                    END, '') WITHIN GROUP (ORDER BY R.CHILDRESERVED) ||
                LISTAGG(CASE
                    WHEN R.SENIORRESERVED IS NOT NULL AND R.SENIORRESERVED > 0 THEN '경로' || R.SENIORRESERVED || '명/'
                    ELSE NULL
                    END, '') WITHIN GROUP (ORDER BY R.SENIORRESERVED),
                        '/')
                AS RESERVATIONPEOPLE,
            REPLACE(R.CINEMA_NAME || '/' || R.SCREEN_NAME, ' ', '') AS CINEMANAME,
            R.RESERVATION_SEAT AS RESERVATIONSEAT,
            M.POSTER_URL AS POSTERURL
        FROM
            RESERVATION_TBL R
                JOIN PAYMENT_TBL P ON R.RESERVATION_NO = P.RESERVATION_NO
                JOIN MOVIE_TBL M  ON p.NAME = m.TITLE
        WHERE
            R.RESERVATION_NO = #{reservationNo}
          AND
            R.MEMBER_ID = #{memberId}
        GROUP BY
            R.MEMBER_ID, R.TITLE, R.RESERVATION_NO, P.PAYMENT_DATE, R.RESERVATION_DATE, R.SHOWTIME_TIME, R.CINEMA_NAME, R.SCREEN_NAME, R.RESERVATION_SEAT, M.POSTER_URL
    </select>

    <delete id="deleteReservationInfo">
        DELETE FROM RESERVATION_TBL WHERE IMP_UID = #{imp_uid}
    </delete>
    <!--영화 전체 조회-->
    <select id="selectAllMovies" resultType="SearchMovieDTO">
        SELECT TITLE,MOVIE_NO,IS_BOOKABLE FROM MOVIE_TBL
    </select>
    <!--지역 코드 조회-->
    <select id="selectAllLocationCode" resultType="Integer">
        select distinct CINEMA_LOCATION_CODE from CINEMA_TBL
    </select>
</mapper>