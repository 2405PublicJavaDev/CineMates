<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.filmfellows.cinemates.domain.main.model.mapper.MainMapper">
    <select id="selectBoxOfficeList" resultType="com.filmfellows.cinemates.app.main.dto.boxOfficeDTO">
        WITH BOOKABLE_MOVIES AS (
            SELECT m.MOVIE_NO, m.TITLE, m.POSTER_URL,
                   COALESCE(SUM(r.RESERVATION_VISITOR), 0) AS VISITOR_COUNT
            FROM MOVIE_TBL m
                     LEFT JOIN RESERVATION_TBL r ON m.MOVIE_NO = r.MOVIE_NO
            WHERE m.IS_BOOKABLE = 'Y'
            GROUP BY m.MOVIE_NO, m.TITLE, m.POSTER_URL
        ),
             TOTAL_VISITORS AS (
                 SELECT SUM(VISITOR_COUNT) AS TOTAL_COUNT
                 FROM BOOKABLE_MOVIES
             ),
             RANKED_MOVIES AS (
                 SELECT
                     bm.MOVIE_NO AS movieNo,
                     bm.TITLE AS title,
                     bm.POSTER_URL AS posterUrl,
                     bm.VISITOR_COUNT AS visitorCount,
                     tv.TOTAL_COUNT AS totalCount,
                     CASE
                         WHEN tv.TOTAL_COUNT > 0 THEN
                             TO_CHAR(ROUND((bm.VISITOR_COUNT / tv.TOTAL_COUNT) * 100, 2), 'FM999990.00') || '%'
                         ELSE '0.00%'
                         END AS reservationRate,
                     ROW_NUMBER() OVER (ORDER BY (bm.VISITOR_COUNT / NULLIF(tv.TOTAL_COUNT, 0)) DESC) AS rn
                 FROM BOOKABLE_MOVIES bm
                          CROSS JOIN TOTAL_VISITORS tv
                 WHERE bm.VISITOR_COUNT > 0
             )
        SELECT
            movieNo, title, posterUrl, visitorCount, totalCount, reservationRate
        FROM RANKED_MOVIES
        ORDER BY rn ASC
    </select>
    <select id="selectBannerList" resultType="BannerDTO">
        SELECT *
        FROM BANNERS_TBL
        ORDER BY
            CASE
                WHEN IS_ACTIVE = 'Y' THEN 0
                ELSE 1
                END,
            BANNER_NO DESC
    </select>
    <insert id="insertBanner">
        INSERT INTO BANNERS_TBL (BANNER_NO, BANNER_TITLE, BANNER_CONTENT, BANNER_URL, LINK_URL, PAGE_TYPE, START_DATE, END_DATE, IS_ACTIVE, REG_DATE)
        VALUES (SEQ_BANNERS_NO.NEXTVAL, #{bannerTitle}, #{bannerContent}, #{bannerUrl}, #{linkUrl}, #{pageType}, #{startDate}, #{endDate}, #{isActive}, SYSDATE)
    </insert>
    <select id="selectBannerByBannerNo" resultType="BannerDTO">
        SELECT * FROM BANNERS_TBL WHERE BANNER_NO = #{bannerNo}
    </select>
    <update id="updateBanner">
        UPDATE BANNERS_TBL
        SET
            BANNER_TITLE = #{bannerTitle},
            BANNER_CONTENT = #{bannerContent},
            BANNER_URL = #{bannerUrl},
            LINK_URL = #{linkUrl},
            PAGE_TYPE = #{pageType},
            START_DATE = #{startDate},
            END_DATE = #{endDate},
            IS_ACTIVE = #{isActive},
            UPDATE_DATE = SYSDATE
        WHERE BANNER_NO = #{bannerNo}
    </update>
    <delete id="deleteBanner">
        DELETE FROM BANNERS_TBL WHERE BANNER_NO = #{bannerNo}
    </delete>
    <select id="selectMainBannerList" resultType="BannerDTO">
        SELECT * FROM BANNERS_TBL WHERE PAGE_TYPE = 'MAIN'
    </select>
    <select id="selectChatRoomList" resultType="ChatRoomDTO">
        SELECT chat.ROOM_NO, chat.ROOM_NAME, chat.ROOM_WRITER, chat.ROOM_DATE, chat.ROOM_CATEGORY,
               chat.MOVIE_NO, movie.TITLE, movie.POSTER_URL,
               chat.CINEMA_LOCATION_CODE,
               SUBSTR(cinema.CINEMA_ADDRESS, 1, INSTR(cinema.CINEMA_ADDRESS, ' ') - 1) CINEMA_ADDRESS, cinema.CINEMA_NO, cinema.CINEMA_NAME
        FROM CHAT_ROOM_TBL chat
                 JOIN MOVIE_TBL movie ON chat.MOVIE_NO = movie.MOVIE_NO
                 JOIN CINEMA_TBL cinema ON chat.CINEMA_NO = cinema.CINEMA_NO
    </select>
<!--    <select id="selectChatRoomList" resultType="ChatRoomDTO">-->
<!--        SELECT * FROM (-->
<!--            SELECT chat.ROOM_NO, -->
<!--                   chat.ROOM_NAME, -->
<!--                   chat.ROOM_WRITER, -->
<!--                   chat.ROOM_DATE, -->
<!--                   chat.ROOM_CATEGORY,-->
<!--                   chat.MOVIE_NO, -->
<!--                   movie.TITLE, -->
<!--                   movie.POSTER_URL,-->
<!--                   chat.CINEMA_LOCATION_CODE,-->
<!--                   SUBSTR(cinema.CINEMA_ADDRESS, 1, INSTR(cinema.CINEMA_ADDRESS, ' ') - 1) AS CINEMA_ADDRESS,-->
<!--                   cinema.CINEMA_NO,-->
<!--                   cinema.CINEMA_NAME,-->
<!--                   ROW_NUMBER() OVER (ORDER BY chat.ROOM_DATE DESC) AS rn-->
<!--            FROM CHAT_ROOM_TBL chat-->
<!--            JOIN MOVIE_TBL movie ON chat.MOVIE_NO = movie.MOVIE_NO-->
<!--            JOIN CINEMA_TBL cinema ON chat.CINEMA_NO = cinema.CINEMA_NO-->
<!--            )-->
<!--            WHERE rn <= 60-->
<!--            ORDER BY ROOM_DATE DESC-->
<!--    </select>-->
</mapper>